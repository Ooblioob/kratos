// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var auth,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  auth = {};

  auth._has_resource_role = function(user, resource, role) {
    var _ref;
    return _ref = resource + '|' + role, __indexOf.call(user.roles, _ref) >= 0;
  };

  auth._has_team_role = function(user, team, role) {
    var user_id, _ref;
    user_id = user.name;
    return __indexOf.call(((_ref = team.roles[role]) != null ? _ref.members : void 0) || [], user_id) >= 0;
  };

  auth._is_resource_admin = function(user, resource) {
    return auth._has_resource_role(user, resource, 'admin');
  };

  auth._is_team_admin = function(user, team) {
    return auth._has_team_role(user, team, 'admin');
  };

  auth.add_team_asset = function(user, team, resource) {
    var _ref;
    return ((_ref = auth[resource]) != null ? _ref.add_team_asset(user, team) : void 0) || false;
  };

  auth.remove_team_asset = function(user, team, resource) {
    var _ref;
    return ((_ref = auth[resource]) != null ? _ref.remove_team_asset(user, team) : void 0) || false;
  };

  auth.add_resource_role = function(user, resource, role) {
    if (__indexOf.call(auth.roles.resource[resource] || [], role) >= 0) {
      return auth[resource].add_resource_role(user, role);
    } else {
      return false;
    }
  };

  auth.remove_resource_role = function(user, resource, role) {
    if (__indexOf.call(auth.roles.resource[resource] || [], role) >= 0) {
      return auth[resource].remove_resource_role(user, role);
    } else {
      return false;
    }
  };

  auth.roles = {
    team: ['admin', 'member'],
    team_admin: ['admin'],
    resource: {
      kratos: ['admin'],
      gh: ['user']
    }
  };

  auth.resources = ['gh'];

  if (typeof window !== "undefined" && window !== null) {
    window.kratos = {
      auth: auth
    };
  } else if (typeof exports !== "undefined" && exports !== null) {
    require('./kratos')(auth);
    require('./gh')(auth);
    module.exports = auth;
  }

}).call(this);
