// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var kratos,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  kratos = function(auth) {
    var is_kratos_admin;
    is_kratos_admin = function(user) {
      return auth._is_resource_admin(user, 'kratos');
    };
    return auth.kratos = {
      add_team: function(user) {
        return is_kratos_admin(user);
      },
      remove_team: function(user) {
        return is_kratos_admin(user);
      },
      add_team_member: function(user, team, role) {
        if (__indexOf.call(auth.roles.team_admin, role) >= 0) {
          return is_kratos_admin(user);
        } else if (__indexOf.call(auth.roles.team, role) >= 0) {
          return is_kratos_admin(user) || auth._is_team_admin(user, team);
        } else {
          return false;
        }
      },
      remove_team_member: function(user, team, role) {
        if (__indexOf.call(auth.roles.team_admin, role) >= 0) {
          return is_kratos_admin(user);
        } else if (__indexOf.call(auth.roles.team, role) >= 0) {
          return is_kratos_admin(user) || auth._is_team_admin(user, team);
        } else {
          return false;
        }
      },
      add_resource_role: function(user, role) {
        return user.name === 'admin';
      },
      remove_resource_role: function(user, role) {
        return user.name === 'admin';
      },
      _is_kratos_admin: is_kratos_admin
    };
  };

  if (typeof window !== "undefined" && window !== null) {
    kratos(window.kratos.auth);
  } else if (typeof exports !== "undefined" && exports !== null) {
    module.exports = kratos;
  }

}).call(this);
