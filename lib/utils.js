// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var x, _;

  _ = require('underscore');

  x = {};

  x.mk_objs = function(obj, path_array, val) {
    var key, last_key, _i, _len;
    if (val == null) {
      val = {};
    }

    /*
    make a set of nested object.
    
    obj = {'x': 1}
    mk_objs(obj, ['a', 'b'], ['1'])
     * returns []
     * obj now equals {'x': 1, 'a': {'b': ['1']}}
    
    return the val
     */
    last_key = path_array.pop();
    for (_i = 0, _len = path_array.length; _i < _len; _i++) {
      key = path_array[_i];
      if (obj[key] == null) {
        obj[key] = {};
      }
      obj = obj[key];
    }
    if (!obj[last_key]) {
      obj[last_key] = val;
    }
    return obj[last_key];
  };

  x.process_resp = function(callback) {

    /*
    process a request HTTP response. return a standardized
    error regardless of whether there was a transport error or a server error
     */
    return function(err, resp, body) {
      if (err || resp.statusCode > 400) {
        err = {
          err: err,
          msg: body,
          code: resp != null ? resp.statusCode : void 0
        };
      }
      return callback(err, resp, body);
    };
  };

  x.compact_hash = function(hash) {

    /*
    given a hash return a new hash with only non-falsy values.
     */
    var out;
    out = _.pick(hash, _.identity);
    if (_.isEmpty(out)) {
      return void 0;
    } else {
      return out;
    }
  };

  module.exports = x;

}).call(this);
