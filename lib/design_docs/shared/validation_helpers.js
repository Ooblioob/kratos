// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var err, v, _;

  try {
    _ = require('underscore');
  } catch (_error) {
    err = _error;
    _ = require('lib/underscore');
  }

  v = {};

  v.is_super_admin = function(user) {
    return user.name === 'admin';
  };

  v.get_new_audit_entries = function(new_doc, old_doc) {
    var new_entries, new_log, old_log;
    new_log = new_doc.audit;
    old_log = old_doc ? old_doc.audit : [];
    new_entries = new_log.slice(old_log.length);
    return new_entries;
  };

  v.validate_audit_entry = function(actions, entry, user, old_doc) {
    var authorized, _name;
    if (entry.u !== user.name) {
      throw {
        forbidden: 'User performing action (' + entry.u + ') does not match logged in user (' + user.name + ').'
      };
    }
    if (!(entry.a in actions)) {
      throw {
        forbidden: 'Invalid action: ' + entry.a + '.'
      };
    }
    authorized = (typeof actions[_name = entry.a] === "function" ? actions[_name](entry, user, old_doc) : void 0) || false;
    if (!authorized) {
      throw {
        unauthorized: 'You do not have the privileges necessary to perform the action.'
      };
    }
  };

  v.validate_audit_entries = function(actions, new_audit_entries, user, old_doc) {

    /*
    actions is a hash of  {action_id: permission_function(user, old_doc, key)}
     */
    return new_audit_entries.forEach(function(entry) {
      return v.validate_audit_entry(actions, entry, user, old_doc);
    });
  };

  module.exports = v;

}).call(this);
