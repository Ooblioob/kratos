// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var validation;

  validation = {
    add_team: function(actor, team) {
      return validation.auth.add_team(actor) && validation.validation.add_team(team);
    },
    remove_team: function(actor, team) {
      return validation.auth.remove_team(actor) && validation.validation.remove_team(team);
    },
    add_team_asset: function(actor, team, resource, asset) {
      return validation.auth.add_team_asset(actor, team, resource) && validation.validation.add_team_asset(team, resource, asset);
    },
    remove_team_asset: function(actor, team, resource, asset) {
      return validation.auth.remove_team_asset(actor, team, resource) && validation.validation.remove_team_asset(team, resource, asset);
    },
    add_team_member: function(actor, team, user, role) {
      return validation.auth.add_team_member(actor, team, role) && validation.validation.add_team_member(team, user, role);
    },
    remove_team_member: function(actor, team, user, role) {
      return validation.auth.remove_team_member(actor, team, role) && validation.validation.remove_team_member(team, user, role);
    },
    add_user: function(actor, user) {
      return validation.auth.add_user(actor) && validation.validation.add_user(user);
    },
    remove_user: function(actor, user) {
      return validation.auth.remove_user(actor) && validation.validation.remove_user(user);
    },
    add_resource_role: function(actor, user, resource, role) {
      return validation.auth.add_resource_role(actor, resource, role) && validation.validation.add_resource_role(user, resource, role);
    },
    remove_resource_role: function(actor, user, resource, role) {
      return validation.auth.remove_resource_role(actor, resource, role) && validation.validation.remove_resource_role(user, resource, role);
    }
  };

  validation.entries = {
    teams: {
      't+': function(event, actor, old_team, new_team) {
        return validation.add_team(actor, new_team);
      },
      'a+': function(event, actor, old_team, new_team) {
        return validation.add_team_asset(actor, old_team, event.k, event.r);
      },
      'a-': function(event, actor, old_team, new_team) {
        return validation.remove_team_asset(actor, old_team, event.k, event.r);
      },
      'u+': function(event, actor, old_team, new_team) {
        return validation.add_team_member(actor, old_team, null, event.k);
      },
      'u-': function(event, actor, old_team, new_team) {
        return validation.remove_team_member(actor, old_team, null, event.k);
      }
    },
    users: {
      'r+': function(event, actor, old_user, new_user) {
        return validation.add_resource_role(actor, new_user, event.k, event.v);
      },
      'r-': function(event, actor, old_user, new_user) {
        return validation.remove_resource_role(actor, new_user, event.k, event.v);
      },
      'u+': function(event, actor, old_user, new_user) {
        return validation.add_user(actor, old_user);
      },
      'u-': function(event, actor, old_user, new_user) {
        return validation.remove_user(actor, user);
      }
    }
  };

  if (typeof window !== "undefined" && window !== null) {
    window.kratos = {
      validation: validation
    };
  } else {
    require('./auth/auth')(validation);
    require('./val/val')(validation);
    module.exports = validation;
  }

}).call(this);
